{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello, I am louhc \u00b6 \u6211\u7684\u535a\u6587\u4e3b\u8981\u53d1\u8868\u5728 louhc.github.io \u6240\u4ee5\u8fd9\u4e2a\u535a\u5ba2\u8981\u7528\u6765\u5e72\u561b\u5462~ \u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741 \u201c \u4f60\u6307\u5c16\u8dc3\u52a8\u7684\u7535\u5149\uff0c\u662f\u6211\u6b64\u751f\u4e0d\u53d8\u7684\u4fe1\u4ef0\uff01 \uff08 \u541b\u306e\u6307\u5148\u3067\u821e\u3063\u3066\u3044\u308b\u96fb\u5149\u306f\u3001\u50d5\u306e\u4eca\u751f\u306b\u5909\u308f\u3089\u306a\u3044\u4fe1\u4ef0\uff01 \uff08 The electric sparkle glittering on your fingertips is my rock solid faith for life! \uff09 \uff09 \u201d \u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741 \u518d\u5708\u517b\u4e00\u53ea\u5e03\u5361\u5a18qwq","title":"\u4e3b\u9875"},{"location":"#hello-i-am-louhc","text":"\u6211\u7684\u535a\u6587\u4e3b\u8981\u53d1\u8868\u5728 louhc.github.io \u6240\u4ee5\u8fd9\u4e2a\u535a\u5ba2\u8981\u7528\u6765\u5e72\u561b\u5462~ \u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741 \u201c \u4f60\u6307\u5c16\u8dc3\u52a8\u7684\u7535\u5149\uff0c\u662f\u6211\u6b64\u751f\u4e0d\u53d8\u7684\u4fe1\u4ef0\uff01 \uff08 \u541b\u306e\u6307\u5148\u3067\u821e\u3063\u3066\u3044\u308b\u96fb\u5149\u306f\u3001\u50d5\u306e\u4eca\u751f\u306b\u5909\u308f\u3089\u306a\u3044\u4fe1\u4ef0\uff01 \uff08 The electric sparkle glittering on your fingertips is my rock solid faith for life! \uff09 \uff09 \u201d \u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741\u2740\u273f\u2741 \u518d\u5708\u517b\u4e00\u53ea\u5e03\u5361\u5a18qwq","title":"Hello, I am louhc"},{"location":"control/","text":"Material color palette \u989c\u8272\u4e3b\u9898 \u00b6 Primary colors \u4e3b\u8272 \u00b6 \u9ed8\u8ba4\u4e3a white \u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) }) Accent colors \u8f85\u52a9\u8272 \u00b6 \u9ed8\u8ba4\u4e3a pink \u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"\u4eea\u8868\u76d8"},{"location":"control/#material-color-palette","text":"","title":"Material color palette \u989c\u8272\u4e3b\u9898"},{"location":"control/#primary-colors","text":"\u9ed8\u8ba4\u4e3a white \u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) })","title":"Primary colors \u4e3b\u8272"},{"location":"control/#accent-colors","text":"\u9ed8\u8ba4\u4e3a pink \u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"Accent colors \u8f85\u52a9\u8272"},{"location":"black-tech/","text":"\u9ed1\u79d1\u6280 \u00b6 \u6211\u4e5f\u4e0d\u77e5\u9053\u9ed1\u79d1\u6280\u5b9a\u4e49\u662f\u5565 \u8fd9\u91cc\u5f88\u591a\u4e1c\u897f\u5176\u5b9e\u90fd\u4e0d\u7b97\u9ed1\u79d1\u6280 \u53ea\u4e0d\u8fc7\u7528\u7684\u4eba\u6bd4\u8f83\u5c11","title":"\u5199\u5728\u524d\u9762"},{"location":"black-tech/#_1","text":"\u6211\u4e5f\u4e0d\u77e5\u9053\u9ed1\u79d1\u6280\u5b9a\u4e49\u662f\u5565 \u8fd9\u91cc\u5f88\u591a\u4e1c\u897f\u5176\u5b9e\u90fd\u4e0d\u7b97\u9ed1\u79d1\u6280 \u53ea\u4e0d\u8fc7\u7528\u7684\u4eba\u6bd4\u8f83\u5c11","title":"\u9ed1\u79d1\u6280"},{"location":"black-tech/miku-tools/","text":"Miku Tools \u00b6 \u7f51\u5740 \u00b6 https://miku.tools/ \u7b80\u4ecb \u00b6 \u4e00\u4e9b\u5e38\u7528\u7684\u5de5\u5177\u3002 \u5927\u90e8\u5206\u90fd\u4e0d\u6536\u8d39\u3002","title":"miku tools"},{"location":"black-tech/miku-tools/#miku-tools","text":"","title":"Miku Tools"},{"location":"black-tech/miku-tools/#_1","text":"https://miku.tools/","title":"\u7f51\u5740"},{"location":"black-tech/miku-tools/#_2","text":"\u4e00\u4e9b\u5e38\u7528\u7684\u5de5\u5177\u3002 \u5927\u90e8\u5206\u90fd\u4e0d\u6536\u8d39\u3002","title":"\u7b80\u4ecb"},{"location":"black-tech/sui-yue-xiao-zhu/","text":"\u5c81\u6708\u5c0f\u7b51 \u00b6 \u7f51\u5740 \u00b6 https://www.xjh.me/ \u7b80\u4ecb \u00b6 \u968f\u673a\u56fe\u7247API https://img.xjh.me/random_img.php \u53ef\u4ee5\u7528\u6765\u4f5c\u58c1\u7eb8 https://img.xjh.me/random_img.php?type=bg&return=302","title":"\u5c81\u6708\u5c0f\u7b51"},{"location":"black-tech/sui-yue-xiao-zhu/#_1","text":"","title":"\u5c81\u6708\u5c0f\u7b51"},{"location":"black-tech/sui-yue-xiao-zhu/#_2","text":"https://www.xjh.me/","title":"\u7f51\u5740"},{"location":"black-tech/sui-yue-xiao-zhu/#_3","text":"\u968f\u673a\u56fe\u7247API https://img.xjh.me/random_img.php \u53ef\u4ee5\u7528\u6765\u4f5c\u58c1\u7eb8 https://img.xjh.me/random_img.php?type=bg&return=302","title":"\u7b80\u4ecb"},{"location":"black-tech/xiao-zhong-ruan-jian/","text":"\u5c0f\u4f17\u8f6f\u4ef6 \u00b6 \u7f51\u5740 \u00b6 https://www.appinn.com/ \u7b80\u4ecb \u00b6 \u4e00\u4e9b\u51b7\u95e8\u4f46\u662f\u597d\u7528\u7684\u8f6f\u4ef6","title":"\u5c0f\u4f17\u8f6f\u4ef6"},{"location":"black-tech/xiao-zhong-ruan-jian/#_1","text":"","title":"\u5c0f\u4f17\u8f6f\u4ef6"},{"location":"black-tech/xiao-zhong-ruan-jian/#_2","text":"https://www.appinn.com/","title":"\u7f51\u5740"},{"location":"black-tech/xiao-zhong-ruan-jian/#_3","text":"\u4e00\u4e9b\u51b7\u95e8\u4f46\u662f\u597d\u7528\u7684\u8f6f\u4ef6","title":"\u7b80\u4ecb"},{"location":"learn/","text":"\u597d\u597d\u5b66\u4e60,\u5929\u5929\u5411\u4e0a \u00b6 \u4f60\u89c9\u5f97\u6211\u662f\u4f1a\u5b66\u4e60\u7684\u4eba\u5417\uff1f \u6211\u8981\u8ba4\u771f\u9893\u5e9f\u2014\u2014 \u54d4\u54e9\u54d4\u54e9 (\u309c-\u309c)\u3064\u30ed \u5e72\u676f ~ -bilibili","title":"\u5b66\u4e60"},{"location":"learn/#_1","text":"\u4f60\u89c9\u5f97\u6211\u662f\u4f1a\u5b66\u4e60\u7684\u4eba\u5417\uff1f \u6211\u8981\u8ba4\u771f\u9893\u5e9f\u2014\u2014 \u54d4\u54e9\u54d4\u54e9 (\u309c-\u309c)\u3064\u30ed \u5e72\u676f ~ -bilibili","title":"\u597d\u597d\u5b66\u4e60,\u5929\u5929\u5411\u4e0a"},{"location":"learn/cantor-expansion/","text":"\u5eb7\u6258\u5c55\u5f00 \u00b6 1.\u5eb7\u6258\u5c55\u5f00 \u00b6 \u5eb7\u6258\u5c55\u5f00\u771f\u662f\u4e2a\u795e\u5947\u7684\u4e1c\u897f\u3002 \u9664\u4e86\u672c\u9898\u7528\u4e8e\u6c42\u67d0\u6392\u5217\u7684\u6392\u540d\u5916\uff0c\u5eb7\u6258\u5c55\u5f00\u4e00\u822c\u7528\u4e8e\u54c8\u5e0c\uff0c\u4e0d\u8fc7\u6211\u4e5f\u6ca1\u505a\u5230\u8fc7\u8fd9\u6837\u7684\u54c8\u5e0c\u9898\u3002 \u5148\u7ed9\u4f60\u67ff\u5b50\u3002 $$ ans=1+\\sum_{i=1}^{n} A[i]\\times(n-i)! $$ \u5176\u4e2d A[i] A[i] \u4ee3\u8868 \\sum_{j=i}^{n}[a[j] < a[i]] \\sum_{j=i}^{n}[a[j] < a[i]] \u600e\u4e48\u6765\u7406\u89e3\u8fd9\u4e2a\u67ff\u5b50\u5462\uff1f\u60f3\u8c61\u6784\u9020\u51fa\u5b57\u5178\u5e8f\u6bd4\u5f53\u524d\u6392\u5217\u5c0f\u7684\u6709\u51e0\u4e2a\u6392\u5217\u3002 \u679a\u4e3e\u5230 i i \u8868\u793a 1 1 \u5230 i-1 i-1 \u548c\u539f\u6765\u7684\u6392\u5217\u4e00\u6837, i i \u4f4d\u80af\u5b9a\u4e0d\u4e00\u6837,\u4e4b\u540e\u548b\u6837\u90fd\u884c\u3002 \u65e2\u7136\u5230 i i \u4f4d\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u5b57\u5178\u5e8f\u5927\u5c0f\u5176\u5b9e\u5c31\u662f\u53d6\u51b3\u4e8e i i \u4f4d\u3002\u5f88\u660e\u663e\uff0c\u7b2c i i \u4f4d\u80af\u5b9a\u8981\u5c0f\u4e8e a[i] a[i] \u3002\u7136\u540e\u53ea\u8981\u628a i i \u540e\u9762\u5c0f\u4e8e a[i] a[i] \u7684\u6570\u4ea4\u6362\u5230 i i \u4f4d,\u540e\u9762\u968f\u4fbf\u6392\u5c31\u884c\u4e86\u3002 \u5f88\u660e\u663e\uff0c\u8fd9\u6837\u679a\u4e3e\u53ef\u4ee5\u505a\u5230\u4e0d\u91cd\u4e0d\u6f0f\u3002\u56e0\u4e3a\u8981\u6c42\u7684\u662f\u6392\u540d,\u6240\u4ee5 ans+=1 ans+=1 \u3002 \u5f53\u7136\u8981\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u4e00\u4e0b\uff0c\u590d\u6742\u5ea6\u662f O(nlgn) O(nlgn) \u7684\u3002 \u53cc\u8bed\u4ee3\u7801\uff08\u6ed1\u7a3d \u00b6 \u5199Pascal\u5c31\u662f\u4e3a\u4e86\u5361\u5e38\u6570,\u52a0O2\u79d2\u6740C++) C++98/11/14/17 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <bits/stdc++.h> using namespace std ; #define MAXN 1000005 #define rgt register #define mod 998244353 int N , a [ MAXN ], fac , c [ MAXN ], ans ; char * p ; inline void read ( rgt int & x ){ x = 0 ; while ( ! isdigit ( * p ) ) ++ p ; while ( isdigit ( * p ) ) x = x * 10 + ( * p & 15 ), ++ p ; } int main (){ scanf ( \"%d\" , & N ), fac = 1 ; p = new char [ N * 8 + 100 ], fread ( p , 1 , N * 8 + 100 , stdin ); for ( rgt int i = N ; i ; -- i ) read ( a [ i ]); for ( rgt int i = 1 , s , j ; i <= N ; ++ i ){ for ( s = 0 , j = a [ i ]; j ; j -= j & - j ) s += c [ j ]; ans = ( ans + 1ll * fac * s ) % mod , fac = 1ll * fac * i % mod ; for ( j = a [ i ]; j <= N ; j += j & - j ) ++ c [ j ]; } printf ( \"%d \\n \" , ans + 1 ); return 0 ; } Pascal \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 var n , fac , s , ans , i , j : longint ; a , c : array [ 1 .. 1000000 ] of longint ; begin read ( n ) ; fac := 1 ; ans := 0 ; for i := n downto 1 do begin read ( a [ i ]) ; c [ i ] := 0 ; end ; for i := 1 to n do begin j := a [ i ] ; s := 0 ; while j > 0 do begin s := s + c [ j ] ; j := j - ( j and - j ) ; end ; ans := ( QWORD ( ans ) + QWORD ( fac ) * QWORD ( s ) ) mod 998244353 ; fac := QWORD ( fac ) * QWORD ( i ) mod 998244353 ; j := a [ i ] ; while j <= n do begin c [ j ] := c [ j ] + 1 ; j := j + ( j and - j ) ; end ; end ; writeln (( ans + 1 ) mod 998244353 ) ; end . 2.\u9006\u5eb7\u6258\u5c55\u5f00 \u00b6 \u7c7b\u4f3c\u4e8e\u8fdb\u5236\u8f6c\u6362\uff0c\u4e0d\u65ad \\%(n-i)! \\%(n-i)! , /(n-1)! /(n-1)! \u5c31\u53ef\u4ee5\u5f97\u5230A\u6570\u7ec4\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fd8\u539f\u51fa\u539f\u6392\u5217\u3002 Update on 2019.7.23 \u6628\u5929\u521a\u521a\u96c6\u8bad\u56de\u6765\uff0c\u4e8e\u662f\u5c31\u6765\u586b\u5751\u4e86 \u4f8b\u9898 \u8fd9\u9898\u5341\u5206\u597d\u5fc3\u5730\u4e3a\u6211\u4eec\u7701\u53bb\u4e86\u6c42\u51fa A A \u6570\u7ec4\u7684\u8fc7\u7a0b\uff08\u5426\u5219\u8981\u9ad8\u7cbe\u5ea6\u9664\u6cd5\uff1f \u95ee\u9898\u8bf4\u767d\u4e86\u5c31\u662f\u5728\u6bcf\u4e00\u4e2a [i,n] [i,n] \u533a\u95f4\u5185\u6c42 K K \u5927\u503c\u3002\u53ef\u4ee5\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811+\u4e8c\u5206\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u8fd9\u5e94\u8be5\u6bd4\u8f83\u57fa\u7840\uff0c\u6240\u4ee5\u770b\u4ee3\u7801\u5427qaq\u3002 \u4ee3\u7801 \u00b6 \u6ca1\u600e\u4e48\u5361\u5e38\u6570\uff0c\u672c\u6765\u60f3\u641ezkw\u7ebf\u6bb5\u6811\u975e\u9012\u5f52\u51cf\u5c0f\u5e38\u6570\uff0c\u4f46\u662f\u61d2\u3002\u3002\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <bits/stdc++.h> using namespace std ; #define MAXN 50005 int T , N , tr [ MAXN << 2 ]; void Build ( int c , int l , int r ){ //\u5efa\u6811 if ( l == r ) return tr [ c ] = 1 , void (); int mid (( l + r ) >> 1 ), ls ( c << 1 ), rs ( c << 1 | 1 ); Build ( ls , l , mid ), Build ( rs , mid + 1 , r ), tr [ c ] = tr [ ls ] + tr [ rs ]; } int Get ( int c , int l , int r , int k ){ //\u627e\u5230k\u5927\u503c\u7684\u540c\u65f6\u5220\u9664k\u5927\u503c -- tr [ c ]; if ( l == r ) return l ; int mid (( l + r ) >> 1 ), ls ( c << 1 ), rs ( ls | 1 ); if ( tr [ ls ] < k ) return Get ( rs , mid + 1 , r , k - tr [ ls ] ); //\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u5230k\u5927\u503c return Get ( ls , l , mid , k ); } int main (){ scanf ( \"%d\" , & T ); while ( T -- ){ scanf ( \"%d\" , & N ), Build ( 1 , 1 , N ); for ( int i = 1 , s ; i <= N ; ++ i ) scanf ( \"%d\" , & s ), printf ( \"%d%c\" , Get ( 1 , 1 , N , s + 1 ), \" \\n \" [ i < N ] ); } return 0 ; }","title":"\u5eb7\u6258\u5c55\u5f00"},{"location":"learn/cantor-expansion/#_1","text":"","title":"\u5eb7\u6258\u5c55\u5f00"},{"location":"learn/cantor-expansion/#1","text":"\u5eb7\u6258\u5c55\u5f00\u771f\u662f\u4e2a\u795e\u5947\u7684\u4e1c\u897f\u3002 \u9664\u4e86\u672c\u9898\u7528\u4e8e\u6c42\u67d0\u6392\u5217\u7684\u6392\u540d\u5916\uff0c\u5eb7\u6258\u5c55\u5f00\u4e00\u822c\u7528\u4e8e\u54c8\u5e0c\uff0c\u4e0d\u8fc7\u6211\u4e5f\u6ca1\u505a\u5230\u8fc7\u8fd9\u6837\u7684\u54c8\u5e0c\u9898\u3002 \u5148\u7ed9\u4f60\u67ff\u5b50\u3002 $$ ans=1+\\sum_{i=1}^{n} A[i]\\times(n-i)! $$ \u5176\u4e2d A[i] A[i] \u4ee3\u8868 \\sum_{j=i}^{n}[a[j] < a[i]] \\sum_{j=i}^{n}[a[j] < a[i]] \u600e\u4e48\u6765\u7406\u89e3\u8fd9\u4e2a\u67ff\u5b50\u5462\uff1f\u60f3\u8c61\u6784\u9020\u51fa\u5b57\u5178\u5e8f\u6bd4\u5f53\u524d\u6392\u5217\u5c0f\u7684\u6709\u51e0\u4e2a\u6392\u5217\u3002 \u679a\u4e3e\u5230 i i \u8868\u793a 1 1 \u5230 i-1 i-1 \u548c\u539f\u6765\u7684\u6392\u5217\u4e00\u6837, i i \u4f4d\u80af\u5b9a\u4e0d\u4e00\u6837,\u4e4b\u540e\u548b\u6837\u90fd\u884c\u3002 \u65e2\u7136\u5230 i i \u4f4d\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u5b57\u5178\u5e8f\u5927\u5c0f\u5176\u5b9e\u5c31\u662f\u53d6\u51b3\u4e8e i i \u4f4d\u3002\u5f88\u660e\u663e\uff0c\u7b2c i i \u4f4d\u80af\u5b9a\u8981\u5c0f\u4e8e a[i] a[i] \u3002\u7136\u540e\u53ea\u8981\u628a i i \u540e\u9762\u5c0f\u4e8e a[i] a[i] \u7684\u6570\u4ea4\u6362\u5230 i i \u4f4d,\u540e\u9762\u968f\u4fbf\u6392\u5c31\u884c\u4e86\u3002 \u5f88\u660e\u663e\uff0c\u8fd9\u6837\u679a\u4e3e\u53ef\u4ee5\u505a\u5230\u4e0d\u91cd\u4e0d\u6f0f\u3002\u56e0\u4e3a\u8981\u6c42\u7684\u662f\u6392\u540d,\u6240\u4ee5 ans+=1 ans+=1 \u3002 \u5f53\u7136\u8981\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u4e00\u4e0b\uff0c\u590d\u6742\u5ea6\u662f O(nlgn) O(nlgn) \u7684\u3002","title":"1.\u5eb7\u6258\u5c55\u5f00"},{"location":"learn/cantor-expansion/#_2","text":"\u5199Pascal\u5c31\u662f\u4e3a\u4e86\u5361\u5e38\u6570,\u52a0O2\u79d2\u6740C++)","title":"\u53cc\u8bed\u4ee3\u7801\uff08\u6ed1\u7a3d"},{"location":"learn/cantor-expansion/#c98111417","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <bits/stdc++.h> using namespace std ; #define MAXN 1000005 #define rgt register #define mod 998244353 int N , a [ MAXN ], fac , c [ MAXN ], ans ; char * p ; inline void read ( rgt int & x ){ x = 0 ; while ( ! isdigit ( * p ) ) ++ p ; while ( isdigit ( * p ) ) x = x * 10 + ( * p & 15 ), ++ p ; } int main (){ scanf ( \"%d\" , & N ), fac = 1 ; p = new char [ N * 8 + 100 ], fread ( p , 1 , N * 8 + 100 , stdin ); for ( rgt int i = N ; i ; -- i ) read ( a [ i ]); for ( rgt int i = 1 , s , j ; i <= N ; ++ i ){ for ( s = 0 , j = a [ i ]; j ; j -= j & - j ) s += c [ j ]; ans = ( ans + 1ll * fac * s ) % mod , fac = 1ll * fac * i % mod ; for ( j = a [ i ]; j <= N ; j += j & - j ) ++ c [ j ]; } printf ( \"%d \\n \" , ans + 1 ); return 0 ; }","title":"C++98/11/14/17"},{"location":"learn/cantor-expansion/#pascal","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 var n , fac , s , ans , i , j : longint ; a , c : array [ 1 .. 1000000 ] of longint ; begin read ( n ) ; fac := 1 ; ans := 0 ; for i := n downto 1 do begin read ( a [ i ]) ; c [ i ] := 0 ; end ; for i := 1 to n do begin j := a [ i ] ; s := 0 ; while j > 0 do begin s := s + c [ j ] ; j := j - ( j and - j ) ; end ; ans := ( QWORD ( ans ) + QWORD ( fac ) * QWORD ( s ) ) mod 998244353 ; fac := QWORD ( fac ) * QWORD ( i ) mod 998244353 ; j := a [ i ] ; while j <= n do begin c [ j ] := c [ j ] + 1 ; j := j + ( j and - j ) ; end ; end ; writeln (( ans + 1 ) mod 998244353 ) ; end .","title":"Pascal"},{"location":"learn/cantor-expansion/#2","text":"\u7c7b\u4f3c\u4e8e\u8fdb\u5236\u8f6c\u6362\uff0c\u4e0d\u65ad \\%(n-i)! \\%(n-i)! , /(n-1)! /(n-1)! \u5c31\u53ef\u4ee5\u5f97\u5230A\u6570\u7ec4\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fd8\u539f\u51fa\u539f\u6392\u5217\u3002 Update on 2019.7.23 \u6628\u5929\u521a\u521a\u96c6\u8bad\u56de\u6765\uff0c\u4e8e\u662f\u5c31\u6765\u586b\u5751\u4e86 \u4f8b\u9898 \u8fd9\u9898\u5341\u5206\u597d\u5fc3\u5730\u4e3a\u6211\u4eec\u7701\u53bb\u4e86\u6c42\u51fa A A \u6570\u7ec4\u7684\u8fc7\u7a0b\uff08\u5426\u5219\u8981\u9ad8\u7cbe\u5ea6\u9664\u6cd5\uff1f \u95ee\u9898\u8bf4\u767d\u4e86\u5c31\u662f\u5728\u6bcf\u4e00\u4e2a [i,n] [i,n] \u533a\u95f4\u5185\u6c42 K K \u5927\u503c\u3002\u53ef\u4ee5\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811+\u4e8c\u5206\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u8fd9\u5e94\u8be5\u6bd4\u8f83\u57fa\u7840\uff0c\u6240\u4ee5\u770b\u4ee3\u7801\u5427qaq\u3002","title":"2.\u9006\u5eb7\u6258\u5c55\u5f00"},{"location":"learn/cantor-expansion/#_3","text":"\u6ca1\u600e\u4e48\u5361\u5e38\u6570\uff0c\u672c\u6765\u60f3\u641ezkw\u7ebf\u6bb5\u6811\u975e\u9012\u5f52\u51cf\u5c0f\u5e38\u6570\uff0c\u4f46\u662f\u61d2\u3002\u3002\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <bits/stdc++.h> using namespace std ; #define MAXN 50005 int T , N , tr [ MAXN << 2 ]; void Build ( int c , int l , int r ){ //\u5efa\u6811 if ( l == r ) return tr [ c ] = 1 , void (); int mid (( l + r ) >> 1 ), ls ( c << 1 ), rs ( c << 1 | 1 ); Build ( ls , l , mid ), Build ( rs , mid + 1 , r ), tr [ c ] = tr [ ls ] + tr [ rs ]; } int Get ( int c , int l , int r , int k ){ //\u627e\u5230k\u5927\u503c\u7684\u540c\u65f6\u5220\u9664k\u5927\u503c -- tr [ c ]; if ( l == r ) return l ; int mid (( l + r ) >> 1 ), ls ( c << 1 ), rs ( ls | 1 ); if ( tr [ ls ] < k ) return Get ( rs , mid + 1 , r , k - tr [ ls ] ); //\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u5230k\u5927\u503c return Get ( ls , l , mid , k ); } int main (){ scanf ( \"%d\" , & T ); while ( T -- ){ scanf ( \"%d\" , & N ), Build ( 1 , 1 , N ); for ( int i = 1 , s ; i <= N ; ++ i ) scanf ( \"%d\" , & s ), printf ( \"%d%c\" , Get ( 1 , 1 , N , s + 1 ), \" \\n \" [ i < N ] ); } return 0 ; }","title":"\u4ee3\u7801"},{"location":"miku/","text":"39C5BB \u00b6 \u5982\u679c\u4f60\u8fdemiku\u90fd\u4e0d\u77e5\u9053\u3002\u3002\u3002 come in","title":"miku"},{"location":"miku/#39c5bb","text":"\u5982\u679c\u4f60\u8fdemiku\u90fd\u4e0d\u77e5\u9053\u3002\u3002\u3002 come in","title":"39C5BB"},{"location":"solution/CF618F/","text":"CF618F Double Knapsack \u00b6 \u9898\u76ee\u63cf\u8ff0 \u00b6 \u7ed9\u4f60\u4e24\u4e2a\u53ef\u91cd\u96c6 A A , B B , A A \u3001 B B \u7684\u5143\u7d20\u4e2a\u6570\u90fd\u4e3a n n \u4e14 n\\le1000000 n\\le1000000 ,\u5b83\u4eec\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f x\\in[1,n] x\\in[1,n] \u3002 \u8bf7\u4f60\u5206\u522b\u627e\u51fa A A , B B \u7684\u53ef\u91cd\u5b50\u96c6,\u4f7f\u5f97\u5b83\u4eec\u4e2d\u7684\u5143\u7d20\u4e4b\u548c\u76f8\u7b49\u3002 \u8f93\u5165\u683c\u5f0f \u00b6 \u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6574\u6570 n n ,\u8868\u793a\u4e24\u4e2a\u5b50\u96c6\u7684\u5927\u5c0f\u3002 \u7b2c\u4e8c\u3001\u4e09\u884c\u7686\u4e3a n n \u4e2a\u6574\u6570,\u5206\u522b\u8868\u793a A A \u3001 B B \u7684\u5143\u7d20\u3002 \u8f93\u51fa\u683c\u5f0f \u00b6 \u5982\u679c\u65e0\u89e3,\u8bf7\u8f93\u51fa -1 -1 \u3002\u5982\u679c\u6709\u89e3,\u7b2c\u4e00\u884c\u8f93\u51fa A A \u7684\u53ef\u91cd\u5b50\u96c6\u4e2d\u5143\u7d20\u7684\u4e2a\u6570,\u7b2c\u4e8c\u884c\u8f93\u51fa\u8be5\u5b50\u96c6\u4e2d\u5143\u7d20\u5728 A A \u4e2d\u5bf9\u5e94\u7684\u4e0b\u6807;\u7b2c\u4e09\u884c\u8f93\u51fa B B \u7684\u53ef\u91cd\u5b50\u96c6\u4e2d\u5143\u7d20\u7684\u4e2a\u6570,\u7b2c\u56db\u884c\u8f93\u51fa\u8be5\u5b50\u96c6\u4e2d\u5143\u7d20\u5728 B B \u4e2d\u5bf9\u5e94\u7684\u4e0b\u6807\u3002 \u6570\u636e\u53ef\u80fd\u5b58\u5728\u591a\u7ec4\u89e3,\u8f93\u51fa\u4e00\u7ec4\u5373\u53ef\u3002 \u601d\u8def \u00b6 \u4e0d\u5f97\u4e0d\u8bf4\u6b64\u9898\u5341\u5206\u795e\u4ed9\u3002 \u5148\u8bb2\u505a\u6cd5\u3002 \u8bfb\u5165\u6570\u636e\u4fdd\u5b58\u5728\u6570\u7ec4 a a , b b \u4e2d\u3002 \u8bbe sa_i=\\sum_{i=1}^n a_i,sb_i=\\sum_{i=1}^n b_i sa_i=\\sum_{i=1}^n a_i,sb_i=\\sum_{i=1}^n b_i \u5047\u8bbe sa[n]\\ge sb[b] sa[n]\\ge sb[b] \u5982\u679c\u4e0d\u662f\u7684\u8bdd\u4ea4\u6362\u5c31OK\u4e86XD \u5bf9\u4e8e\u6bcf\u4e2a sa_i sa_i ,( i\\in[0,n] i\\in[0,n] ),\u9009\u53d6 sb_j sb_j \u4f7f sb_j sb_j \u5c0f\u4e8e\u7b49\u4e8e sa_i sa_i \u4e14 j j \u6700\u5927\u3002 \u5982\u679c sa_i-sb_j sa_i-sb_j \u7684\u503c\u4e4b\u524d\u672a\u51fa\u73b0\u8fc7,\u5c06 sa_i-sb_j sa_i-sb_j \u8bb0\u5f55,\u5e76\u4fdd\u5b58\u6b64\u65f6\u7684 i i , j j \u5982\u679c\u8be5\u503c\u4e4b\u524d\u51fa\u73b0\u8fc7,\u76f4\u63a5\u5c06 a a , b b \u4e2d\u4e4b\u524d\u51fa\u73b0\u4f4d\u7f6e\u5230 a a , b b \u76ee\u524d\u7684\u4f4d\u7f6e i i , j j \u5206\u522b\u8f93\u51fa\u5373\u53ef\u3002 \u7531\u4e8e\u4fdd\u8bc1\u6240\u6709\u6570\u90fd\u5728 [1,n] [1,n] \u4e4b\u95f4,\u56e0\u6b64\u82e5 sb_j sb_j \u662f sb sb \u4e2d\u6700\u5927\u7684\u5c0f\u4e8e sa_i sa_i \u7684\u6570, sa_i-sb_j sa_i-sb_j \u5c0f\u4e8e n n ,\u6709 n n \u79cd\u53d6\u503c\u3002 \u4ece 0 0 \u5230 n n \u6709 n+1 n+1 \u79cd\u53d6\u503c,\u6839\u636e\u62bd\u5c49\u539f\u7406,\u80af\u5b9a\u80fd\u9047\u5230 sa_i-sb_j sa_i-sb_j \u4e4b\u524d\u51fa\u73b0\u8fc7\u7684\u60c5\u51b5,\u56e0\u6b64\u80af\u5b9a\u6709\u89e3\u3002 \u4ee3\u7801 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <bits/stdc++.h> using namespace std ; #define i64 long long #define MAXN 1000005 int N , flg , p1 , p2 , t ; i64 a [ MAXN ], b [ MAXN ]; int ra [ MAXN ], rb [ MAXN ]; inline void print ( int x , int y ){ printf ( \"%d \\n \" , y - x + 1 ); for ( int i = x ; i <= y ; ++ i ) printf ( \"%d \" , i ); putchar ( '\\n' ); } int main (){ scanf ( \"%d\" , & N ), b [ N + 1 ] = 0x7f7f7f7f7f7f7f7f ; for ( int i = 1 ; i <= N ; ++ i ) scanf ( \"%lld\" , a + i ), a [ i ] += a [ i - 1 ]; for ( int i = 1 ; i <= N ; ++ i ) scanf ( \"%lld\" , b + i ), b [ i ] += b [ i - 1 ]; if ( a [ N ] < b [ N ] ) swap ( a , b ), flg = 1 ; memset ( ra , - 1 , sizeof ra ); for ( p1 = p2 = 0 ; p1 <= N ; ++ p1 ){ while ( b [ p2 + 1 ] <= a [ p1 ] ) ++ p2 ; t = a [ p1 ] - b [ p2 ]; if ( ra [ t ] != - 1 ){ flg ? print ( rb [ t ] + 1 , p2 ), print ( ra [ t ] + 1 , p1 ) : ( print ( ra [ t ] + 1 , p1 ), print ( rb [ t ] + 1 , p2 )); break ; } ra [ t ] = p1 , rb [ t ] = p2 ; } return 0 ; }","title":"CF618F Double Knapsack"},{"location":"solution/CF618F/#cf618f-double-knapsack","text":"","title":"CF618F Double Knapsack"},{"location":"solution/CF618F/#_1","text":"\u7ed9\u4f60\u4e24\u4e2a\u53ef\u91cd\u96c6 A A , B B , A A \u3001 B B \u7684\u5143\u7d20\u4e2a\u6570\u90fd\u4e3a n n \u4e14 n\\le1000000 n\\le1000000 ,\u5b83\u4eec\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f x\\in[1,n] x\\in[1,n] \u3002 \u8bf7\u4f60\u5206\u522b\u627e\u51fa A A , B B \u7684\u53ef\u91cd\u5b50\u96c6,\u4f7f\u5f97\u5b83\u4eec\u4e2d\u7684\u5143\u7d20\u4e4b\u548c\u76f8\u7b49\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"solution/CF618F/#_2","text":"\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6574\u6570 n n ,\u8868\u793a\u4e24\u4e2a\u5b50\u96c6\u7684\u5927\u5c0f\u3002 \u7b2c\u4e8c\u3001\u4e09\u884c\u7686\u4e3a n n \u4e2a\u6574\u6570,\u5206\u522b\u8868\u793a A A \u3001 B B \u7684\u5143\u7d20\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"solution/CF618F/#_3","text":"\u5982\u679c\u65e0\u89e3,\u8bf7\u8f93\u51fa -1 -1 \u3002\u5982\u679c\u6709\u89e3,\u7b2c\u4e00\u884c\u8f93\u51fa A A \u7684\u53ef\u91cd\u5b50\u96c6\u4e2d\u5143\u7d20\u7684\u4e2a\u6570,\u7b2c\u4e8c\u884c\u8f93\u51fa\u8be5\u5b50\u96c6\u4e2d\u5143\u7d20\u5728 A A \u4e2d\u5bf9\u5e94\u7684\u4e0b\u6807;\u7b2c\u4e09\u884c\u8f93\u51fa B B \u7684\u53ef\u91cd\u5b50\u96c6\u4e2d\u5143\u7d20\u7684\u4e2a\u6570,\u7b2c\u56db\u884c\u8f93\u51fa\u8be5\u5b50\u96c6\u4e2d\u5143\u7d20\u5728 B B \u4e2d\u5bf9\u5e94\u7684\u4e0b\u6807\u3002 \u6570\u636e\u53ef\u80fd\u5b58\u5728\u591a\u7ec4\u89e3,\u8f93\u51fa\u4e00\u7ec4\u5373\u53ef\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"solution/CF618F/#_4","text":"\u4e0d\u5f97\u4e0d\u8bf4\u6b64\u9898\u5341\u5206\u795e\u4ed9\u3002 \u5148\u8bb2\u505a\u6cd5\u3002 \u8bfb\u5165\u6570\u636e\u4fdd\u5b58\u5728\u6570\u7ec4 a a , b b \u4e2d\u3002 \u8bbe sa_i=\\sum_{i=1}^n a_i,sb_i=\\sum_{i=1}^n b_i sa_i=\\sum_{i=1}^n a_i,sb_i=\\sum_{i=1}^n b_i \u5047\u8bbe sa[n]\\ge sb[b] sa[n]\\ge sb[b] \u5982\u679c\u4e0d\u662f\u7684\u8bdd\u4ea4\u6362\u5c31OK\u4e86XD \u5bf9\u4e8e\u6bcf\u4e2a sa_i sa_i ,( i\\in[0,n] i\\in[0,n] ),\u9009\u53d6 sb_j sb_j \u4f7f sb_j sb_j \u5c0f\u4e8e\u7b49\u4e8e sa_i sa_i \u4e14 j j \u6700\u5927\u3002 \u5982\u679c sa_i-sb_j sa_i-sb_j \u7684\u503c\u4e4b\u524d\u672a\u51fa\u73b0\u8fc7,\u5c06 sa_i-sb_j sa_i-sb_j \u8bb0\u5f55,\u5e76\u4fdd\u5b58\u6b64\u65f6\u7684 i i , j j \u5982\u679c\u8be5\u503c\u4e4b\u524d\u51fa\u73b0\u8fc7,\u76f4\u63a5\u5c06 a a , b b \u4e2d\u4e4b\u524d\u51fa\u73b0\u4f4d\u7f6e\u5230 a a , b b \u76ee\u524d\u7684\u4f4d\u7f6e i i , j j \u5206\u522b\u8f93\u51fa\u5373\u53ef\u3002 \u7531\u4e8e\u4fdd\u8bc1\u6240\u6709\u6570\u90fd\u5728 [1,n] [1,n] \u4e4b\u95f4,\u56e0\u6b64\u82e5 sb_j sb_j \u662f sb sb \u4e2d\u6700\u5927\u7684\u5c0f\u4e8e sa_i sa_i \u7684\u6570, sa_i-sb_j sa_i-sb_j \u5c0f\u4e8e n n ,\u6709 n n \u79cd\u53d6\u503c\u3002 \u4ece 0 0 \u5230 n n \u6709 n+1 n+1 \u79cd\u53d6\u503c,\u6839\u636e\u62bd\u5c49\u539f\u7406,\u80af\u5b9a\u80fd\u9047\u5230 sa_i-sb_j sa_i-sb_j \u4e4b\u524d\u51fa\u73b0\u8fc7\u7684\u60c5\u51b5,\u56e0\u6b64\u80af\u5b9a\u6709\u89e3\u3002","title":"\u601d\u8def"},{"location":"solution/CF618F/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <bits/stdc++.h> using namespace std ; #define i64 long long #define MAXN 1000005 int N , flg , p1 , p2 , t ; i64 a [ MAXN ], b [ MAXN ]; int ra [ MAXN ], rb [ MAXN ]; inline void print ( int x , int y ){ printf ( \"%d \\n \" , y - x + 1 ); for ( int i = x ; i <= y ; ++ i ) printf ( \"%d \" , i ); putchar ( '\\n' ); } int main (){ scanf ( \"%d\" , & N ), b [ N + 1 ] = 0x7f7f7f7f7f7f7f7f ; for ( int i = 1 ; i <= N ; ++ i ) scanf ( \"%lld\" , a + i ), a [ i ] += a [ i - 1 ]; for ( int i = 1 ; i <= N ; ++ i ) scanf ( \"%lld\" , b + i ), b [ i ] += b [ i - 1 ]; if ( a [ N ] < b [ N ] ) swap ( a , b ), flg = 1 ; memset ( ra , - 1 , sizeof ra ); for ( p1 = p2 = 0 ; p1 <= N ; ++ p1 ){ while ( b [ p2 + 1 ] <= a [ p1 ] ) ++ p2 ; t = a [ p1 ] - b [ p2 ]; if ( ra [ t ] != - 1 ){ flg ? print ( rb [ t ] + 1 , p2 ), print ( ra [ t ] + 1 , p1 ) : ( print ( ra [ t ] + 1 , p1 ), print ( rb [ t ] + 1 , p2 )); break ; } ra [ t ] = p1 , rb [ t ] = p2 ; } return 0 ; }","title":"\u4ee3\u7801"}]}